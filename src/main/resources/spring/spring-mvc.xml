<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 自动扫描该包，Spring MVC 会将包下用 @Controller 注解的类注册为 Spring 的 controller -->
    <context:component-scan base-package="com.stary" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.RestControllerAdvice"/>
    </context:component-scan>

    <!-- 设置默认配置方案 -->
    <mvc:default-servlet-handler/>
    <mvc:annotation-driven>
        <!--避免访问login.html，被controller中的login映射处理的情况-->
        <mvc:path-matching suffix-pattern="false"/>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
                        <property name="targetObject">
                            <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                                <property name="serializationInclusion" value="NON_NULL"/>
                            </bean>
                        </property>
                        <property name="targetMethod" value="configure"/>
                        <property name="arguments">
                            <list>
                                <value>FAIL_ON_UNKNOWN_PROPERTIES</value>
                                <value>false</value>
                            </list>
                        </property>
                    </bean>
                </property>
            </bean>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 设置拦截器-->
    <!--<mvc:interceptors>-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/**"/>-->
            <!--<mvc:exclude-mapping path="/**/*.css"/>-->
            <!--<mvc:exclude-mapping path="/**/*.js"/>-->
            <!--<mvc:exclude-mapping path="/**/*.png"/>-->
            <!--<mvc:exclude-mapping path="/**/*.gif"/>-->
            <!--<mvc:exclude-mapping path="/**/*.jpg"/>-->
            <!--<mvc:exclude-mapping path="/**/*.jpeg"/>-->
            <!--<bean class="com.qunar.lfz.interceptor.LoginInterceptor"/>-->
        <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->

    <!-- 视图解析器 -->
    <!--<bean id="viewResolver"-->
          <!--class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
        <!--&lt;!&ndash; 执行完action后会返回xxx，xxx会和下面的property组合，形成跳转页面的路径 &ndash;&gt;-->
        <!--<property name="prefix" value=""/>-->
        <!--<property name="suffix" value=".jsp"/>-->
    <!--</bean>-->

    <!--不启用shiro注解控制controller接口授权，注解都是抛异常，没法制定跳转页面，不好用，还是用shiro过滤器指定权限好用-->
    <!--<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>-->
    <!--<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>-->
    <!--<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">-->
        <!--<property name="securityManager" ref="securityManager"/>-->
    <!--</bean>-->
</beans>